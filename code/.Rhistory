# Create volcano plot ####
ggplot(top_table, aes()) +
geom_point(aes(logFC, -log10(P.Value), color = adj.P.Val < 0.05)) +
scale_color_manual(values = c("grey", "darkred")) +
labs(
title = "SLE meta-analysis",
y = "-log10(p-value)",
x = "log2 fold change",
color = "FDR < 0.05"
) +
ggrepel::geom_text_repel(
data = top_table[1:20, ],
aes(label = gene),
size = 3,
max.overlaps = 20
) +
theme_classic()
# Create volcano plot ####
ggplot(top_table, aes()) +
geom_point(aes(logFC, -log10(P.Value), color = adj.P.Val < 0.05)) +
scale_color_manual(values = c("grey", "darkred")) +
labs(
title = "SLE meta-analysis",
y = "-log10(p-value)",
x = "log2 fold change"
) +
ggrepel::geom_text_repel(
data = top_table[1:20, ],
aes(label = gene),
) +
theme_classic()
heaD(top_table)
head(top_table)
# Create volcano plot ####
ggplot(top_table, aes(logFC, -log10(P.Value))) +
geom_point(aes(color = adj.P.Val < 0.05)) +
scale_color_manual(values = c("grey", "darkred")) +
labs(
title = "SLE meta-analysis",
y = "-log10(p-value)",
x = "log2 fold change"
) +
ggrepel::geom_text_repel(
data = top_table[1:20, ],
aes(label = gene),
) +
theme_classic()
# Create volcano plot ####
ggplot(top_table, aes(logFC, -log10(P.Value))) +
geom_point(aes(color = adj.P.Val < 0.05)) +
scale_color_manual(values = c("grey", "darkred")) +
labs(
title = "SLE meta-analysis",
y = "-log10(p-value)",
x = "log2 fold change"
) +
ggrepel::geom_text_repel(
data = top_table[1:40, ],
aes(label = gene),
) +
theme_classic()
plot_gene("IFI27")
plot_gene <- function(gene){
aframe <- data.frame(
gene = as.numeric(merged_expr[gene, ]),
study, merged_treat)
ggplot(aframe, aes(merged_treat, gene, color = merged_treat)) +
labs(
title = "SLE meta-analysis",
y = paste(gene, "expression levels"),
x = "Condition", color = "Condition"
) +
facet_wrap(~ study, nrow = 1) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_color_manual(values = c("grey", "darkred")) +
theme_classic()
}
plot_gene("IFI27")
plot_gene("KLRB1")
plot_gene <- function(gene){
aframe <- data.frame(
gene = as.numeric(merged_expr[gene, ]),
study, merged_treat)
ggplot(aframe, aes(merged_treat, gene, color = merged_treat)) +
labs(
title = "SLE meta-analysis",
y = paste(gene, "expression levels"),
x = "Condition", color = "Condition"
) +
facet_wrap(~ study, nrow = 1, scales = "free_y") +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_color_manual(values = c("grey", "darkred")) +
theme_classic()
}
plot_gene("IFI27")
plot_gene("KLRB1")
ggplot(top_table, aes(logFC, -log10(P.Value))) +
geom_point(aes(color = adj.P.Val < 0.05)) +
scale_color_manual(values = c("grey", "darkred")) +
labs(
title = "SLE meta-analysis",
y = "-log10(p-value)",
x = "log2 fold change"
) +
ggrepel::geom_text_repel(
data = top_table[1:40, ],
aes(label = gene),
) +
theme_classic()
plot_gene("IFI27")
plot_gene("KLRB1")
head(top_table)
# Save results in table ####
write.csv(
top_table, file = "/Users/lukas/Downloads/merged_sle_diff_expr.csv",
row.names = F
)
setwd("~/GitHub/sle_analysis/code")
top_table
# Save results in table ####
write.csv(
top_table, file = "../outputs/merged_sle_diff_expr.csv",
row.names = F
)
ong
hong
hong@assayData
tmp <- hong@assayData$exprs
tmp[1:4,1:4]
dim(tmp)
rm(list=ls())
setwd("~/GitHub/mt_cleavage/code")
# Load R libs ####
library(biomaRt)
library(data.table)
library(ggplot2)
library(limma)
library(pheatmap)
# Load MT annotation ####
anno <- read.delim("/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_gencode.gtf")
anno$genes <- unlist(lapply(anno$V9, function(x)
substr(x, regexpr("name", x)[1] + 5, gregexpr(";", x)[[1]][3] - 1)))
p_anno <- ggplot() +
labs(y = "annotation",
x = "Position on chrM") +
xlim(0, 16569) +
scale_color_manual(values = c("black")) +
geom_rect(
data = anno[anno$V7 == "+",],
aes(xmin = V4, xmax = V5, ymin = 0.1, ymax = 1,
alpha = .1, color = 'black')) +
geom_rect(
data = anno[anno$V7 == "-",],
aes(xmin = V4, xmax = V5, ymin = -1, ymax = -0.1,
alpha = .1, color = 'black')) +
theme_classic() +
theme(legend.position = "none",
axis.text.y = element_blank())
# Load DepMap ####
load("/Users/lukas/OneDrive/Documents/GitHub/depmap_app/data/global.RData")
# Get coordinates ####
mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
genelist <- getBM(attributes = c("hgnc_symbol", "chromosome_name", "start_position", "end_position"),
filters = "hgnc_symbol",
values = colnames(cnv),
mart = mart)
chrs <- c(as.character(seq(1:22)), "X", "Y")
genelist <- genelist[genelist$chromosome_name %in% chrs,]
genelist$chromosome_name <- factor(genelist$chromosome_name, levels = chrs)
# Load FASTK knockout data ####
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
# Run PCA ####
tmp <- start_rate_ko[which(apply(start_rate_ko, 1, var) > 0), ]
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
head(meta)
names(dat)
files[grep("_NR_", files, fixed = T)]
files <- files[-grep("_NR_", files, fixed = T)]
files <- files[-grep("_R_", files, fixed = T)]
length(files)
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
start_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_starts/x$total_num_reads))
end_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_ends/x$total_num_reads))
coverage_ko <- do.call(cbind, lapply(dat, function(x) x$total_num_reads))
starts_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_starts))
ends_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_ends))
tmp <- start_rate_ko[which(apply(start_rate_ko, 1, var) > 0), ]
nas <- apply(tmp, 1, function(x) mean(is.na(x)))
tmp <- tmp[nas == 0,]
tmp <- tmp[apply(tmp, 1, var) > 0,]
pca <- prcomp(t(tmp), scale. = T)
aframe <- data.frame(pca$x, meta)
p1 <- ggplot(aframe, aes(PC1, PC2, color = genotype)) +
labs(title = "Start rate") +
geom_point() + theme_classic()
tmp <- end_rate_ko[which(apply(end_rate_ko, 1, var) > 0), ]
nas <- apply(tmp, 1, function(x) mean(is.na(x)))
tmp <- tmp[nas == 0,]
tmp <- tmp[apply(tmp, 1, var) > 0,]
pca <- prcomp(t(tmp), scale. = T)
aframe <- data.frame(pca$x, meta)
p2 <- ggplot(aframe, aes(PC1, PC2, color = genotype)) +
labs(title = "End rate") +
geom_point() + theme_classic()
gridExtra::grid.arrange(p1, p2, ncol = 2)
# Split by genotype ####
asplit <- split(meta$Run, meta$genotype)
means <- lapply(asplit, function(x)
rowMeans(start_rate_ko[, x], na.rm = T))
subm <- data.frame(
pos =  1:nrow(start_rate_ko),
start_ko = means[["KD5 -/-"]],
start_wt = means[["WT +/+"]]
)
res_start <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
start_rate_ko[x, asplit[["KD5 -/-"]]],
start_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(start_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(start_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res_end <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
end_rate_ko[x, asplit[["KD5 -/-"]]],
end_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(end_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(end_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res <- data.frame(
pos = 1:nrow(start_rate_ko),
start = res_start, end = res_end
)
res$start_score <- -log10(res$start.2)
res$start_score[which(res$start.1 < 0)] <- (-1)*res$start_score[which(res$start.1 < 0)]
res$end_score <- -log10(res$end.2)
res$end_score[which(res$end.1 < 0)] <- (-1)*res$end_score[which(res$end.1 < 0)]
ggplot(res, aes(pos, start_score)) +
labs(title = "Start rate difference", y = "KD5 - WT", x = "Position on chrM") +
geom_point() +
theme_classic()
ggplot(res, aes(pos, end_score)) +
labs(title = "End rate", y = "KD5 - WT", x = "Position on chrM") +
geom_point() +
theme_classic() + xlim(5800, 6100)
tmp <- reshape2::melt(res, measure.vars = c("start_score", "end_score"))
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic()
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(5850, 6050)
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(14600, 14900)
tail(anno)
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
#files <- files[-grep("_NR_", files, fixed = T)]
files <- files[grep("_R_", files, fixed = T)]
length(files)
dat <- lapply(files, read.delim)
basename(files)
names(dat) <- gsub("_1_preprocessed_R_cleavage.tsv", "", fixed = T, basename(files))
names(dat)
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
head(meta)
start_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_starts/x$total_num_reads))
end_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_ends/x$total_num_reads))
coverage_ko <- do.call(cbind, lapply(dat, function(x) x$total_num_reads))
starts_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_starts))
ends_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_ends))
res_start <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
start_rate_ko[x, asplit[["KD5 -/-"]]],
start_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(start_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(start_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res_end <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
end_rate_ko[x, asplit[["KD5 -/-"]]],
end_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(end_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(end_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res <- data.frame(
pos = 1:nrow(start_rate_ko),
start = res_start, end = res_end
)
res$start_score <- -log10(res$start.2)
res$start_score[which(res$start.1 < 0)] <- (-1)*res$start_score[which(res$start.1 < 0)]
res$end_score <- -log10(res$end.2)
res$end_score[which(res$end.1 < 0)] <- (-1)*res$end_score[which(res$end.1 < 0)]
tmp <- reshape2::melt(res, measure.vars = c("start_score", "end_score"))
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(14600, 14900)
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
files <- files[-grep("_NR_", files, fixed = T)]
#files <- files[grep("_R_", files, fixed = T)]
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_R_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
res <- data.frame(
pos = 1:nrow(start_rate_ko),
start = res_start, end = res_end
)
res$start_score <- -log10(res$start.2)
res$start_score[which(res$start.1 < 0)] <- (-1)*res$start_score[which(res$start.1 < 0)]
res$end_score <- -log10(res$end.2)
res$end_score[which(res$end.1 < 0)] <- (-1)*res$end_score[which(res$end.1 < 0)]
tmp <- reshape2::melt(res, measure.vars = c("start_score", "end_score"))
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(14600, 14900)
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
files <- files[grep("_NR_", files, fixed = T)]
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_R_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
files <- files[grep("_NR_", files, fixed = T)]
length(files)
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_NR_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
start_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_starts/x$total_num_reads))
end_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_ends/x$total_num_reads))
coverage_ko <- do.call(cbind, lapply(dat, function(x) x$total_num_reads))
starts_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_starts))
ends_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_ends))
res_start <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
start_rate_ko[x, asplit[["KD5 -/-"]]],
start_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(start_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(start_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res_end <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
end_rate_ko[x, asplit[["KD5 -/-"]]],
end_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(end_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(end_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res <- data.frame(
pos = 1:nrow(start_rate_ko),
start = res_start, end = res_end
)
res$start_score <- -log10(res$start.2)
res$start_score[which(res$start.1 < 0)] <- (-1)*res$start_score[which(res$start.1 < 0)]
res$end_score <- -log10(res$end.2)
res$end_score[which(res$end.1 < 0)] <- (-1)*res$end_score[which(res$end.1 < 0)]
tmp <- reshape2::melt(res, measure.vars = c("start_score", "end_score"))
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(14600, 14900)
files <- list.files(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/mt_cleavage_GSE156260/", full.names = T)
#files <- files[grep("_NR_", files, fixed = T)]
files <- files[grep("_R_", files, fixed = T)]
dat <- lapply(files, read.delim)
names(dat) <- gsub("_1_preprocessed_R_cleavage.tsv", "", fixed = T, basename(files))
meta <- read.csv(
"/Users/lukas/OneDrive/Documents/GitHub/mt_cleavage/data/GSE156260_info.txt")
meta <- meta[match(names(dat), meta$Run), ]
rownames(meta) <- meta$Run
start_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_starts/x$total_num_reads))
end_rate_ko <- do.call(cbind, lapply(dat, function(x)
x$num_of_ends/x$total_num_reads))
coverage_ko <- do.call(cbind, lapply(dat, function(x) x$total_num_reads))
starts_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_starts))
ends_ko <- do.call(cbind, lapply(dat, function(x) x$num_of_ends))
res_start <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
start_rate_ko[x, asplit[["KD5 -/-"]]],
start_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(start_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(start_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res_end <- do.call(rbind, lapply(1:nrow(start_rate_ko), function(x){
pval <- try(t.test(
end_rate_ko[x, asplit[["KD5 -/-"]]],
end_rate_ko[x, asplit[["WT +/+"]]])$p.value)
if(class(pval) == "try-error") pval <- NA
diff <- mean(end_rate_ko[x, asplit[["KD5 -/-"]]]) -
mean(end_rate_ko[x, asplit[["WT +/+"]]])
c(diff, pval)
}))
res <- data.frame(
pos = 1:nrow(start_rate_ko),
start = res_start, end = res_end
)
res$start_score <- -log10(res$start.2)
res$start_score[which(res$start.1 < 0)] <- (-1)*res$start_score[which(res$start.1 < 0)]
res$end_score <- -log10(res$end.2)
res$end_score[which(res$end.1 < 0)] <- (-1)*res$end_score[which(res$end.1 < 0)]
tmp <- reshape2::melt(res, measure.vars = c("start_score", "end_score"))
ggplot(tmp, aes(pos, value, color = value)) +
labs(
y = "KD5 vs WT",
x = "Position on chrM"
) +
facet_wrap(~variable, nrow = 2) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(aes(alpha = abs(value))) +
scale_color_gradient2(low = "blue", mid = "grey", high = "red") +
theme_classic() +
xlim(14600, 14900)
